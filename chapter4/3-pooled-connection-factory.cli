# Add messaging server with default configuration, allow only in-VM connectors  
/subsystem=messaging-activemq/server=default:add(elytron-domain="ApplicationDomain",security-enabled="false",statistics-enabled="${wildfly.messaging-activemq.statistics-enabled:${wildfly.statistics-enabled:false}}")
/subsystem=messaging-activemq/server=default/address-setting=#:add(dead-letter-address="jms.queue.DLQ",expiry-address="jms.queue.ExpiryQueue",max-size-bytes="10485760",message-counter-history-day-limit="10",page-size-bytes="2097152")
/subsystem=messaging-activemq/server=default/http-acceptor=http-acceptor:add(http-listener="default")
/subsystem=messaging-activemq/server=default/http-acceptor=http-acceptor-throughput:add(http-listener="default",params={"batch-delay" => "50","direct-deliver" => "false"})
/subsystem=messaging-activemq/server=default/http-connector=http-connector:add(endpoint="http-acceptor",socket-binding="http")
/subsystem=messaging-activemq/server=default/http-connector=http-connector-throughput:add(endpoint="http-acceptor-throughput",params={"batch-delay" => "50"},socket-binding="http")
/subsystem=messaging-activemq/server=default/in-vm-acceptor=in-vm:add(params={"buffer-pooling" => "false"},server-id="0")
/subsystem=messaging-activemq/server=default/in-vm-connector=in-vm:add(params={"buffer-pooling" => "false"},server-id="0")


/subsystem=messaging-activemq/server=default/connection-factory=InVmConnectionFactory:add(connectors=["in-vm"],entries=["java:/ConnectionFactory"])
/subsystem=messaging-activemq/server=default/connection-factory=RemoteConnectionFactory:add(connectors=["http-connector"],entries=["java:jboss/exported/jms/RemoteConnectionFactory"])


/subsystem=messaging-activemq/server=default/jms-queue="ExpiryQueue":add(entries=["java:/jms/queue/ExpiryQueue"])
/subsystem=messaging-activemq/server=default/jms-queue="DLQ":add(entries=["java:/jms/queue/DLQ"])

# Configure default connection factory in the EE subsystem
/subsystem=ee/service=default-bindings/:write-attribute(name="jms-connection-factory", value="java:jboss/DefaultJMSConnectionFactory")

# Configure message-driven beans in the EJB subsystem
/subsystem=ejb3:write-attribute(name="default-resource-adapter-name", value="${ejb.resource-adapter-name:activemq-ra.rar}")
/subsystem=ejb3:write-attribute(name="default-mdb-instance-pool", value="mdb-strict-max-pool")

/subsystem=messaging-activemq/server=default/pooled-connection-factory=activemq-ra:add(connectors=["in-vm"],entries=["java:/JmsXA","java:jboss/DefaultJMSConnectionFactory"],transaction="xa")

/subsystem=messaging-activemq/server=default/security-setting=#:add()
/subsystem=messaging-activemq/server=default/security-setting=#/role="guest":add(consume="true",create-non-durable-queue="true",delete-non-durable-queue="true",send="true")


# Configure pooled-connection-factory
/socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=remote-artemis:add(host=${amq.broker.host}, port=${amq.broker.port})
/subsystem=messaging-activemq/remote-connector=remote-artemis:add(socket-binding=remote-artemis)
/subsystem=messaging-activemq/pooled-connection-factory=remote-artemis:add(connectors=[remote-artemis], entries=[java:/jms/remoteCF])
/subsystem=messaging-activemq/pooled-connection-factory=remote-artemis:write-attribute(name="user", value="${amq.broker.userName}")
/subsystem=messaging-activemq/pooled-connection-factory=remote-artemis:write-attribute(name="password", value="${amq.broker.passWord}")
/subsystem=messaging-activemq/pooled-connection-factory=remote-artemis:write-attribute(name="enable-amq1-prefix", value="true")
/subsystem=messaging-activemq/external-jms-queue=testQueueRemoteArtemis:add(entries=[java:/queue/testQueueRemoteArtemis])