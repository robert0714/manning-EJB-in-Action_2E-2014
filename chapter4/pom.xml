<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.actionbazaar.chapter4</groupId>
    <artifactId>chapter4</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>chapter4</name>

    <properties>
    	<jakartaee-api.version>8.0.0</jakartaee-api.version>
        
        <!-- JBoss dependency versions -->
        <version.wildfly.maven.plugin>3.0.0.Final</version.wildfly.maven.plugin>
        
        <!-- Define the version of the JBoss BOMs we want to import to specify tested stacks. -->
        <version.jboss.bom>26.1.1.Final</version.jboss.bom>
        <wildfly.version>26.1.0.Final</wildfly.version>
        
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <failOnMissingWebXml>false</failOnMissingWebXml>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        
        <!-- other plugin versions -->
        <version.compiler.plugin>3.8.1</version.compiler.plugin>
        <version.surefire.plugin>2.22.2</version.surefire.plugin>
        <version.failsafe.plugin>2.22.2</version.failsafe.plugin> 
        <version.war.plugin>3.3.2</version.war.plugin>
        <endorsed.dir>${project.build.directory}/endorsed</endorsed.dir> 
    </properties>
    
    <dependencies>
        <dependency>
            <groupId>jakarta.platform</groupId> 
            <artifactId>jakarta.jakartaee-api</artifactId>
            <version>${jakartaee-api.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- Import the JPA API, we use provided scope as the API is included in WildFly / JBoss EAP -->
        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
       <plugins>
		    <!-- The WildFly plugin deploys your war to a local JBoss AS container -->
			<plugin>
				<groupId>org.wildfly.plugins</groupId>
				<artifactId>wildfly-jar-maven-plugin</artifactId> 
				<version>${version.wildfly.maven.plugin}</version>
				<configuration>
					<feature-packs>
                        <feature-pack>
                            <location>wildfly@maven(org.jboss.universe:community-universe)#${wildfly.version}</location>
                        </feature-pack>                        
                    </feature-packs>
					<layers>  
						<layer>ejb</layer>
						<layer>jpa</layer>
						<layer>web-server</layer> 	
					</layers>
					<excluded-layers>
						<layer>deployment-scanner</layer>
					</excluded-layers>
                    <hostname>localhost</hostname>
                    <port>9990</port>
                    <username>admin</username>
                    <password>123456</password>
            <!-- <jbossHome>C:/tools/wildfly-8.0.0.Final</jbossHome> -->
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>package</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			 
            <!--Build configuration for the WAR plugin: -->
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>${version.war.plugin}</version>
				<configuration>
					<!-- Jakarta EE doesn't require web.xml, Maven needs to catch up! -->
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${version.surefire.plugin}</version>
				<configuration>
					<skipTests>${ts.skipTests}</skipTests>
					<enableAssertions>true</enableAssertions>
							<!-- System properties to forked surefire JVM which runs clients. -->
					<failIfNoTests>false</failIfNoTests>
					<redirectTestOutputToFile>${testLogToFile}</redirectTestOutputToFile>
					<systemPropertyVariables>
						<jboss.home>${basedir}/target/wildfly-${org.wildfly.as.version}</jboss.home>
					</systemPropertyVariables>
				</configuration>
					<executions>

						<!-- Disable default-test execution. -->
						<execution>
							<id>default-test</id>
							<goals>
								<goal>test</goal>
							</goals>
							<phase>none</phase>
						</execution>
						<execution>
							<id>basic-integration-default-full.surefire</id>
							<phase>test</phase>
							<goals>
								<goal>test</goal>
							</goals>
							<configuration>
							
					        <!-- Parameters to test cases. -->
							<systemPropertyVariables
								combine.children="append">
								<jboss.server.config.file.name>standalone-full.xml</jboss.server.config.file.name>
								<jboss.options>-Dee8.preview.mode=true</jboss.options>
							</systemPropertyVariables>
						</configuration>
					</execution>
				</executions>
			</plugin>
        </plugins>
    </build>
    <!--tag::dm[]-->
    <dependencyManagement>
        <dependencies> 
            <!-- JBoss distributes a complete set of Jakarta EE 8 APIs including
                a Bill of Materials (BOM). A BOM specifies the versions of a "stack" (or 
                a collection) of artifacts. We use this here so that we always get the correct 
                versions of artifacts. Here we use the wildfly-jakartaee-8.0-with-tools stack
                (you can read this as the WildFly stack of the Jakarta EE 8 APIs, with some extras
                tools for your project, such as Arquillian for testing) -->
            <dependency>
                <groupId>org.wildfly.bom</groupId>
                <artifactId>wildfly-jakartaee8-with-tools</artifactId>
                <version>${version.jboss.bom}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>            
        </dependencies>
    </dependencyManagement>
    <!--end::dm[]-->
</project>